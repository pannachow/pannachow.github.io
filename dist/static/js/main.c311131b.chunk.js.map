{"version":3,"sources":["Hexagoner.js","App.js","index.js"],"names":["Hexagoner","props","canvasRef","useRef","useEffect","current","Error","start","ref","style","canvasStyle","containerStyle","margin","width","minWidth","height","display","justifyContent","alignItems","iconSize","App","shapes","color","src","url","primaryColor","primaryText","primaryFont","secondaryText","secondaryFont","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAGe,SAASA,EAAUC,GAChC,IAAMC,EAAYC,iBAAO,MAOzB,OALAC,qBAAU,WACR,GAA0B,OAAtBF,EAAUG,QAAkB,MAAM,IAAIC,MAAM,yBAChDC,gBAAML,EAAUG,QAASJ,KACxB,CAACA,IAEG,wBAAQO,IAAKN,EAAWO,MAAOR,EAAMS,cCR9C,IAAMC,EAAiB,CACrBC,OAAQ,EACRC,MAAO,OACPC,SAAU,QACVC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAERR,EAAc,CAClBG,MAAO,QACPE,OAAQ,SAIJI,EAAW,GAgDFC,MA9Cf,WACE,IAAMnB,EAAQ,CACZoB,OAAQ,CACN,CACEC,MAAO,UACPC,IAAK,cACLV,MATW,IAUXE,OAVW,KAYb,CACEO,MAAO,UACPC,IAAK,kBACLV,MAAOM,EACPJ,OAAQI,EACRK,IAAK,8CAEP,CACEF,MAAO,UACPC,IAAK,eACLV,MAAOM,EACPJ,OAAQI,EACRK,IAAK,gCAEP,CACEF,MAAO,UACPC,IAAK,iBACLV,MAAOM,EACPJ,OAAQI,EACRK,IAAK,2CAGTC,aAAc,OACdC,YAAa,aACbC,YAAa,kBACbC,cAAe,6BACfC,cAAe,kBACfnB,eAGF,OACE,qBAAKD,MAAOE,EAAZ,SACE,cAACX,EAAD,eAAeC,O,MCxDrB6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c311131b.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { start } from 'hexagoner';\n\nexport default function Hexagoner(props) {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    if (canvasRef.current === null) throw new Error('Canvas not available.');\n    start(canvasRef.current, props);\n  }, [props]);\n\n  return <canvas ref={canvasRef} style={props.canvasStyle}></canvas>;\n}\n","import React from 'react';\nimport Hexagoner from './Hexagoner';\n\nconst containerStyle = {\n  margin: 0,\n  width: '100%',\n  minWidth: '520px', // should match canvas width\n  height: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n};\nconst canvasStyle = {\n  width: '520px',\n  height: '300px',\n};\n\nconst avatarSize = 100;\nconst iconSize = 50;\n\nfunction App() {\n  const props = {\n    shapes: [\n      {\n        color: '#ffffff',\n        src: './panna.jpg',\n        width: avatarSize,\n        height: avatarSize,\n      },\n      {\n        color: '#e1306c',\n        src: './instagram.png',\n        width: iconSize,\n        height: iconSize,\n        url: 'https://www.instagram.com/miss.pannapanna/',\n      },\n      {\n        color: '#171516',\n        src: './github.png',\n        width: iconSize,\n        height: iconSize,\n        url: 'https://github.com/pannachow',\n      },\n      {\n        color: '#0274b3',\n        src: './linkedin.png',\n        width: iconSize,\n        height: iconSize,\n        url: 'https://www.linkedin.com/in/pannachow/',\n      },\n    ],\n    primaryColor: '#fff',\n    primaryText: 'PANNA CHOW',\n    primaryFont: '30px Montserrat',\n    secondaryText: 'Amsterdam, The Netherlands',\n    secondaryFont: '18px Montserrat',\n    canvasStyle,\n  };\n\n  return (\n    <div style={containerStyle}>\n      <Hexagoner {...props} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}